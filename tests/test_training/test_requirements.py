"""Testing module for api train. This is a test file designed to use
pytest and prepared for some basic assertions and to add your own tests.

You can add new tests using the following structure:
```py
def test_{description for the test}(metadata):
    # Add your assertions inside the test function
    assert {statement_1 that returns true or false}
    assert {statement_2 that returns true or false}
```
The conftest.py module in the same directory includes the fixture to return
to your tests inside the argument variable `metadata` the value generated by
your function defined at `api.get_metadata`.

If your file grows in complexity, you can split it into multiple files in
the same folder. However, remember to add the prefix `test_` to the file.
"""
# pylint: disable=redefined-outer-name
# pylint: disable=unused-argument
from pathlib import Path
from api import config


def test_training_return_type(training):
    """Tests that training returns a dict type."""
    assert isinstance(training, dict)


def test_training_model_type(training, model_type):
    """Tests that provided model_type has a matching config"""
    config_paths = sorted(Path(
        config.MODELS_PATH.parent, "thermal_anomaly_segmenter",
        "configurations"
    ).glob("*.json"))
    print(f"Found config files: {config_paths}")
    config_names = [cfg_path.stem for cfg_path in config_paths]
    assert f"train_{model_type}" in config_names
